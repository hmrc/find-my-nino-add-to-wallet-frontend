/*
 * Copyright 2023 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package util

import base.SpecBase
import org.scalatestplus.mockito.MockitoSugar

import java.util.Base64

class GoogleCredentialsHelperSpec extends SpecBase with MockitoSugar {

  "GoogleCredentialsHelper" - {

    "should create GoogleCredentials from a base64-encoded key" in {
      val helper = new GoogleCredentialsHelper()
      // Replace with a valid base64-encoded key
      val base64Key = "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAic2NhLW5pbm8iLAogICJwcml2YXRlX2tleV9pZCI6ICJiZmUxMjJmZDVkMzY3Y2FjMjQyZDk2YjU5NDMwMWI5YmRjOTZkZWVmIiwKICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG5NSUlFdXdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLVXdnZ1NoQWdFQUFvSUJBUURGQVVscTVTMXJ4dk9GXG5pTkJxMGRWQnVKN2FJWU1ubGN1cFU0czNpWFBwZUJITmhxZW4wY3JCSE1NaWhlcUhrRTFWVjV5VGhFdllZSHpzXG5IeGd1dWFhb285RmJ6WHAybzBHaXcvNnVBL2F2eUYrWGQyb3RMbGpQN0tFNGswKzBmamZqNlZ4b0tQUkhUMGd6XG5vSE16aENvNnVOV2xaMWFCd3NuWlVVekJRck4zNlhsS29NRGVhWEFNdm8zQS93c3NDNFJmYW9ZNWROdmZFUnlyXG5nUUF0RmlSWXpQelI0VS9ueGFVWGNXeXFOa3U5eG9wb0NwR0NVbFovcHRMdEhuMHBrOSt6c1JjSGlFMG9oSGRZXG5wUUphaGtjS3AyNDBJalcwWDdNTkFEdXg5L3NPTkpETWVYTDEwS0UvNTZFZFBzOWFKWTJmSUtwUDU5c2M5QTNhXG42VXBNdzdtbkFnTUJBQUVDZ2Y4c2QrY0lURVVyUmFyN2k2OS8ydDEvTHhyMWF3alVacUEycXJkQ0NOY083bWJOXG5OSVdqa3NteGhFeUh0VVVFVktDTjJkMXJ1Qld2MUJmTVdUaDNuTG1CeFM5cWR5NGJLNzYzV2owMDVkUzIyUVBmXG5ZNVVUNXVKSnc2QU9YQTJQZVlCdFRRakZuc0lYVnBjc2ZkUmVsYTJFM09yS2ZYYXQrRGU4VmgyaHl6VzNmNmhqXG40TjdoUk1FTllZVFpSTXVlUjRnZzlwdkV0dEhlZndiYVNOMjR4MGIyMkpRWWFBTG9NZmhvczVYcEVlS2s1eFJaXG5BMXZmZXZiUmVoT285UFQwRnJWUS9XdytyQUlyelowU2VOdkFFT3o2Qk1kVVZOWWRXQlFVVzlwNU9RY3dTVS9wXG5xQWxaVGVBSTJETnJiTE5FS01LRlFKeEUrVzI1YTBvQ0RCZ0pDQ1VDZ1lFQTl4WGZWdHgvczZGU0cxRHNtWjBmXG5VcFBEVFRSaGNwWi82UkRLWDBzZGZmRWxMMnZ6N0pKQStkLzV2cmNHNm5DVjdWdzVmREVwNHdrR3JEWmNHNkpmXG5RbjhzYzgrRTY2UTJ4c2gvSUhvQ1FqK3ZXRCtIOXpIZndWNkkwNE9zekR2S0VQNnNNUk9TY21PUHhIdUZQRUk4XG5TUE9yZ0w2dUlnd2hxUUtxcFVPVWtIMENnWUVBekJ6Y3ZRazFGbk1OaEJja3lxbDlGNThPbU5McU14NnB0bFNxXG5sWFpmMEYyZHphaHljL3V1KzNLRGFXdGdZa0NGc2NWNUphVEhFNFprZmhQMXduQ0pWaHc1TnVmWndTVHdxVFJSXG5PYy9ES1A1Nm1BMXVLRWdidWdLWjRTdTl1aUczRXdRTlp6TlRCbkFZeS9TMWtBaGxNbmdqNDlxVW5QalFiNXcyXG5tVWRJVC9NQ2dZQmpDOHFHaUVkTW00dE5WZWd5UDlEUmlsZ010OFdrYUg0SDBHby9QdDRvb1NUMTJJRmtRTkI1XG5HZmFFSTl4SzJDelJoRm1xMWc1amF6Zllpc1hyY2ZCYnVKejZJNksxenhNQ0psY0hqc0VmQzJaZnFyLzNNRy93XG5sTk9tYmk4emczZ2h6ZVQ2bTB6bU85RGl3MTBLWmNiQ3U2THhMZjZodVZrNDVjL0FCZElsQlFLQmdRQ1FTWGJoXG5TcmowZmJCNFI4UUNYMzNHVFBJTXBreFlocnlCMzZnV3IrOWJaRkpCSjJxQkF0SFhma1BYS2NpZ3Erdldsem5rXG5tbThBSm1pemwzaUxVdkpDcFFEdEIwaXZlR1dIdHl3VUtnSlQ0RkRaVytVYkpKNDFCOUd2a3pRemQ5SHE1MXB5XG5NWjNuVnlhd1J2UnlOUDBVaUVrV3NWV05BWGFXNzE3SlM5S2FjUUtCZ0RNSk5OdjN3Tmpla0lPWGJYaitxb1NCXG5EbDlsTlR3dll4c2hia2Zub0M3SENoR05hVm9aTmdVSjRBNXdBbDROdUQ2b3RmZk1ZMG5DeXBVU0lRQThONkVBXG5UZmpQa3RFeFFlQ3RuUXBjd1I1REtYRUtMREpLNmY2V1RUWXdPNjlFc0RyLzlYVWg0UWVmUjBtQ3greVdrRWR4XG5KL291STUzdUtNWU1PUHFzMjBVc1xuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxuIiwKICAiY2xpZW50X2VtYWlsIjogInByaXZhdGUtcGFzc2VzLXdlYi1jbGllbnRAc2NhLW5pbm8uaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJjbGllbnRfaWQiOiAiMTE3Nzk5MDA0NzQ3MDQxNTUzMDMyIiwKICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgiLAogICJ0b2tlbl91cmkiOiAiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW4iLAogICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS9wcml2YXRlLXBhc3Nlcy13ZWItY2xpZW50JTQwc2NhLW5pbm8uaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iCn0K"

      val credentials = helper.createGoogleCredentials(base64Key)

      // Assert that the credentials were created successfully
      assert(credentials != null)
    }

    "should create GoogleCredentials with the correct scope" in {
      val helper = new GoogleCredentialsHelper()
      // Replace with a valid base64-encoded key
      val base64Key = "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAic2NhLW5pbm8iLAogICJwcml2YXRlX2tleV9pZCI6ICJiZmUxMjJmZDVkMzY3Y2FjMjQyZDk2YjU5NDMwMWI5YmRjOTZkZWVmIiwKICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG5NSUlFdXdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLVXdnZ1NoQWdFQUFvSUJBUURGQVVscTVTMXJ4dk9GXG5pTkJxMGRWQnVKN2FJWU1ubGN1cFU0czNpWFBwZUJITmhxZW4wY3JCSE1NaWhlcUhrRTFWVjV5VGhFdllZSHpzXG5IeGd1dWFhb285RmJ6WHAybzBHaXcvNnVBL2F2eUYrWGQyb3RMbGpQN0tFNGswKzBmamZqNlZ4b0tQUkhUMGd6XG5vSE16aENvNnVOV2xaMWFCd3NuWlVVekJRck4zNlhsS29NRGVhWEFNdm8zQS93c3NDNFJmYW9ZNWROdmZFUnlyXG5nUUF0RmlSWXpQelI0VS9ueGFVWGNXeXFOa3U5eG9wb0NwR0NVbFovcHRMdEhuMHBrOSt6c1JjSGlFMG9oSGRZXG5wUUphaGtjS3AyNDBJalcwWDdNTkFEdXg5L3NPTkpETWVYTDEwS0UvNTZFZFBzOWFKWTJmSUtwUDU5c2M5QTNhXG42VXBNdzdtbkFnTUJBQUVDZ2Y4c2QrY0lURVVyUmFyN2k2OS8ydDEvTHhyMWF3alVacUEycXJkQ0NOY083bWJOXG5OSVdqa3NteGhFeUh0VVVFVktDTjJkMXJ1Qld2MUJmTVdUaDNuTG1CeFM5cWR5NGJLNzYzV2owMDVkUzIyUVBmXG5ZNVVUNXVKSnc2QU9YQTJQZVlCdFRRakZuc0lYVnBjc2ZkUmVsYTJFM09yS2ZYYXQrRGU4VmgyaHl6VzNmNmhqXG40TjdoUk1FTllZVFpSTXVlUjRnZzlwdkV0dEhlZndiYVNOMjR4MGIyMkpRWWFBTG9NZmhvczVYcEVlS2s1eFJaXG5BMXZmZXZiUmVoT285UFQwRnJWUS9XdytyQUlyelowU2VOdkFFT3o2Qk1kVVZOWWRXQlFVVzlwNU9RY3dTVS9wXG5xQWxaVGVBSTJETnJiTE5FS01LRlFKeEUrVzI1YTBvQ0RCZ0pDQ1VDZ1lFQTl4WGZWdHgvczZGU0cxRHNtWjBmXG5VcFBEVFRSaGNwWi82UkRLWDBzZGZmRWxMMnZ6N0pKQStkLzV2cmNHNm5DVjdWdzVmREVwNHdrR3JEWmNHNkpmXG5RbjhzYzgrRTY2UTJ4c2gvSUhvQ1FqK3ZXRCtIOXpIZndWNkkwNE9zekR2S0VQNnNNUk9TY21PUHhIdUZQRUk4XG5TUE9yZ0w2dUlnd2hxUUtxcFVPVWtIMENnWUVBekJ6Y3ZRazFGbk1OaEJja3lxbDlGNThPbU5McU14NnB0bFNxXG5sWFpmMEYyZHphaHljL3V1KzNLRGFXdGdZa0NGc2NWNUphVEhFNFprZmhQMXduQ0pWaHc1TnVmWndTVHdxVFJSXG5PYy9ES1A1Nm1BMXVLRWdidWdLWjRTdTl1aUczRXdRTlp6TlRCbkFZeS9TMWtBaGxNbmdqNDlxVW5QalFiNXcyXG5tVWRJVC9NQ2dZQmpDOHFHaUVkTW00dE5WZWd5UDlEUmlsZ010OFdrYUg0SDBHby9QdDRvb1NUMTJJRmtRTkI1XG5HZmFFSTl4SzJDelJoRm1xMWc1amF6Zllpc1hyY2ZCYnVKejZJNksxenhNQ0psY0hqc0VmQzJaZnFyLzNNRy93XG5sTk9tYmk4emczZ2h6ZVQ2bTB6bU85RGl3MTBLWmNiQ3U2THhMZjZodVZrNDVjL0FCZElsQlFLQmdRQ1FTWGJoXG5TcmowZmJCNFI4UUNYMzNHVFBJTXBreFlocnlCMzZnV3IrOWJaRkpCSjJxQkF0SFhma1BYS2NpZ3Erdldsem5rXG5tbThBSm1pemwzaUxVdkpDcFFEdEIwaXZlR1dIdHl3VUtnSlQ0RkRaVytVYkpKNDFCOUd2a3pRemQ5SHE1MXB5XG5NWjNuVnlhd1J2UnlOUDBVaUVrV3NWV05BWGFXNzE3SlM5S2FjUUtCZ0RNSk5OdjN3Tmpla0lPWGJYaitxb1NCXG5EbDlsTlR3dll4c2hia2Zub0M3SENoR05hVm9aTmdVSjRBNXdBbDROdUQ2b3RmZk1ZMG5DeXBVU0lRQThONkVBXG5UZmpQa3RFeFFlQ3RuUXBjd1I1REtYRUtMREpLNmY2V1RUWXdPNjlFc0RyLzlYVWg0UWVmUjBtQ3greVdrRWR4XG5KL291STUzdUtNWU1PUHFzMjBVc1xuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxuIiwKICAiY2xpZW50X2VtYWlsIjogInByaXZhdGUtcGFzc2VzLXdlYi1jbGllbnRAc2NhLW5pbm8uaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJjbGllbnRfaWQiOiAiMTE3Nzk5MDA0NzQ3MDQxNTUzMDMyIiwKICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgiLAogICJ0b2tlbl91cmkiOiAiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW4iLAogICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS9wcml2YXRlLXBhc3Nlcy13ZWItY2xpZW50JTQwc2NhLW5pbm8uaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iCn0K"

      val credentials = helper.createGoogleCredentials(base64Key)

      // Assert that the credentials have the expected scope
      assert(credentials.contains("https://www.googleapis.com/auth/wallet_object.issuer"))
    }
  }

}
